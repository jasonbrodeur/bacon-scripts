function [output] = jjb_interp_gap(input_data, max_gap)
%% jjb_gapfinder.m
%%% This function is used to find all gaps within a dataset that are as
%%% much as, or less than a specified number of data points.
%%% The output is a list of locations in the input file where this
%%% condition exists
%%% for gap of 3, must go up to 3
a = input_data;
ind_nan = find(isnan(a));

if max_gap == 3;
    
%%% shifted back 1 point
a_b1(1:length(a)-1,1) = a(2:length(a));
a_b1(length(a)) = a(length(a));
%%% shifted back 2 points
a_b2(1:length(a)-2,1) = a(3:length(a));
a_b2(length(a)-1:length(a)) = a(length(a)-1:length(a));
%%% shifted back 3 points
a_b3(1:length(a)-3,1) = a(4:length(a));
a_b3(length(a)-2:length(a)) = a(length(a)-2:length(a));


%%% Shifted ahead 1 point
a_a1(1,1) = a(1);
a_a1(2:length(a),1) = a(1:length(a)-1);
%%% Shifted ahead 2 points
a_a2(1:2,1) = a(1:2,1);
a_a2(3:length(a),1) = a(1:length(a)-2);
% Shifted ahead 3 points
a_a3(1:3,1) = a(1:3,1);
a_a3(4:length(a),1) = a(1:length(a)-3);

ind_interp = find (isnan(dcdt_2h) & (~isnan(dcdt_2h_b1.*dcdt_2h_a1) |  ...
    ~isnan(dcdt_2h_b1.*dcdt_2h_a2) | ~isnan(dcdt_2h_b2.*dcdt_2h_a1) | ...
    ~isnan(dcdt_2h_b2.*dcdt_2h_a2) | ~isnan(dcdt_2h_b3.*dcdt_2h_a1) | ...
    ~isnan(dcdt_2h_b1.*dcdt_2h_a3) ));

a_interp = interp_nan(dt,a);
a_fill = a_interp;
a_fill(ind_nan,1) = NaN;
a_fill(ind_interp,1) = dcdt_2h_interp(ind_interp);



else
    disp('this is not ready yet');
end